const template = document.createElement('template');
template.innerHTML = `<style>
* {
  background: white;
}
#<%= fileName %>-container {
  position: fixed;
  top: 2px;
  left: 2px;
  box-shadow: 6px 6px 2px 1px rgba(0, 0, 255, 0.2);
  border: thin solid rgba(0, 0, 255, 0.5);
  z-index: 1;
}
#<%= fileName %>-main {
  margin: 20px;
}
</style>
<div id="<%= fileName %>-container">
  <div id="<%= fileName %>-main">
    <h1><%= fileName %></h1>
    <button>Clear logs</button>
    <button>Send Message with delayed reponse</button>
    <button>Show counters</button>
    <button>Set an alarm</button>
    <div id="log"></div>
  </div>
</div>`;
const el = template.content.cloneNode(true) as HTMLElement;
const logDiv = el.querySelector('#log');
const buttons = el.querySelectorAll('button');
function log(message) {
  logDiv.innerHTML += message.concat('<br />');
}
buttons[0].addEventListener('click', () => {
  logDiv.innerHTML = ''
});
buttons[1].addEventListener('click', () => {
  const message = { delayedResponse: true };
  chrome.runtime.sendMessage(message, (response) => {
    log('Background page responded: ' + response);
  });
});
buttons[2].addEventListener('click', () => {
  const message = { getCounters: true };
  chrome.runtime.sendMessage(message, (response) => {
    log('In-memory counter is: ' + response.counter);
    log('Persisted counter is: ' + response.persistentCounter);
  });
});
buttons[3].addEventListener('click', () => {
  const message = { setAlarm: true };
  chrome.runtime.sendMessage(message);
});
chrome.runtime.onMessage.addListener((msg, _, _sendResponse) => {
  log('Got message from background page: ' + msg);
});
log(document.title)
document.body.appendChild(el);
